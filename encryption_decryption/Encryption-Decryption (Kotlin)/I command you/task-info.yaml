type: edu
files:
- name: src/Main.kt
  visible: true
  text: |-
    package encryptdecrypt

    fun simpleEncrypt(message: String): String {
        val transformationSum = 219
        var encryptedMessage = ""
        for (symbol in message) {
            encryptedMessage += if (symbol.isLetter()) (transformationSum - symbol.code).toChar() else symbol
        }
        return encryptedMessage
    }

    fun keyEncryptAlphabet(message: String, key: Int): String {
        val startAlphabet = 97
        val endAlphabet = 122
        val numAlphabet = 23
        val effectiveKey = key % numAlphabet
        var encryptedMessage = ""
        for (symbol in message) {
            if (symbol.isLetter()) {
                val delta = endAlphabet - symbol.code
                val distance = effectiveKey - delta
                encryptedMessage += if (distance <= 0) {
                    (symbol.code + effectiveKey).toChar()
                } else {
                    (startAlphabet + (distance - 1)).toChar()
                }
            } else {
                encryptedMessage += " "
            }
        }
        return encryptedMessage
    }

    fun keyEncryptDecrypt(message: String, key: Int): String {
        var encryptedMessage = ""
        for (symbol in message) {
            encryptedMessage += (symbol.code + key).toChar()
        }
        return encryptedMessage
    }

    fun main() {
        val targetOp = readln()
        val message = readln()
        var key = readln().toInt()
        if (targetOp == "enc") {
            key *= +1
        } else if (targetOp == "dec") {
            key *= -1
        }
        println(keyEncryptDecrypt(message, key))
    }
  learner_created: false
- name: test/EncryptDecryptTest.java
  visible: false
  text: |
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;

    import java.util.List;

    public class EncryptDecryptTest extends StageTest<String> {

        @Override
        public List<TestCase<String>> generate() {
            return List.of(
                new TestCase<String>()
                    .addArguments(
                        "-mode", "enc",
                        "-key", "5",
                        "-data", "Welcome to hyperskill!"
                    )
                    .setAttach("\\jqhtrj%yt%m~ujwxpnqq&"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "0",
                        "-mode", "enc",
                        "-data", "Hello"
                    )
                    .setAttach("Hello"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "1",
                        "-data", "012345678",
                        "-mode", "enc"
                    )
                    .setAttach("123456789"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-data", "\\jqhtrj%yt%m~ujwxpnqq&",
                        "-key", "5"
                    )
                    .setAttach("Welcome to hyperskill!"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "0",
                        "-data", "Hi"
                    )
                    .setAttach("Hi"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "1",
                        "-data", "222233334444"
                    )
                    .setAttach("111122223333")
            );
        }

        @Override
        public CheckResult check(String reply, String clue) {
            return new CheckResult(reply.trim().equals(clue.trim()));
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/learn/step/21969#comment
status: Solved
feedback:
  message: Congratulations!
  time: "Thu, 16 Mar 2023 08:19:00 UTC"
record: 4
